[project]
name = "polarsteps-mcp"
version = "0.1.0"
description = "MCP server for Polarsteps API - enables Claude and other MCP clients to interact with travel data"
readme = "README.md"
requires-python = ">=3.10"
authors = [{name = "Remi Uzel"}]
keywords = ["mcp", "polarsteps", "llm", "travel", "api"]
license = {file = "LICENSE.md"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "mcp>=1.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "httpx>=0.24.0",
    "polarsteps-api @ file:///Volumes/workplace/polarsteps-api",
    "ruff>=0.12.0",
    "black>=25.1.0",
    "pytest>=8.4.1",
    "rapidfuzz>=3.13.0",
]

[tool.uv]
dev-dependencies = [
    "pyright>=1.1.389",
    "ruff>=0.7.3",
    "pytest>=8.0.0",
    "black>=23.0.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
]

[project.scripts]
polarsteps-mcp = "polarsteps_mcp.server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "B", "C4", "PIE", "SIM", "RET"]
ignore = ["E501"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "src/polarsteps_mcp/server.py",
    "*/__init__.py",
    "*/__main__.py",
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
fail_under = 80
show_missing = true
skip_covered = false

[tool.hatch.metadata]
allow-direct-references = true

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used check
